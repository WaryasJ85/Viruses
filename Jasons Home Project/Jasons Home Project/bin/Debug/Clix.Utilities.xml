<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Clix.Utilities</name>
    </assembly>
    <members>
        <member name="T:Clix.Utilities.AsyncLock">
            <summary>
            	An <c>async</c>/<c>await</c>-compatible lock primitive.
            </summary>
        </member>
        <member name="F:Clix.Utilities.AsyncLock.releaser">
            <summary>
            	The current releaser.
            </summary>
        </member>
        <member name="F:Clix.Utilities.AsyncLock.semaphore">
            <summary>
            	The semaphore used to provide wait semantics.
            </summary>
        </member>
        <member name="M:Clix.Utilities.AsyncLock.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Clix.Utilities.AsyncLock"/> class.
            </summary>
        </member>
        <member name="M:Clix.Utilities.AsyncLock.LockAsync">
            <summary>
            	Asynchronously acquire the lock.
            </summary>
            <returns>
            	An <see cref="T:System.IDisposable"/> that releases the lock, when disposed.
            </returns>
        </member>
        <member name="T:Clix.Utilities.AsyncLock.Releaser">
            <summary>
            	An <see cref="T:System.IDisposable"/> implementation that releases the lock when disposed.
            </summary>
        </member>
        <member name="F:Clix.Utilities.AsyncLock.Releaser.lockToRelease">
            <summary>
            	The <see cref="T:Clix.Utilities.AsyncLock"/> to release.
            </summary>
        </member>
        <member name="M:Clix.Utilities.AsyncLock.Releaser.#ctor(Clix.Utilities.AsyncLock)">
            <summary>
            Initializes a new instance of the <see cref="T:Clix.Utilities.AsyncLock.Releaser"/> struct.
            </summary>
            <param name="lockToRelease">
            	The <see cref="T:Clix.Utilities.AsyncLock"/> to release.
            </param>
        </member>
        <member name="M:Clix.Utilities.AsyncLock.Releaser.Dispose">
            <summary>
            	Release the lock.
            </summary>
        </member>
        <member name="T:Clix.Utilities.AsyncSemaphore">
            <summary>
            	An <c>async</c>/<c>await</c>-compatible implementation of <see cref="T:System.Threading.Semaphore"/>.
            </summary>
        </member>
        <member name="F:Clix.Utilities.AsyncSemaphore.PreCompleted">
            <summary>
            	A cached, pre-completed task.
            </summary>
        </member>
        <member name="F:Clix.Utilities.AsyncSemaphore.waitOperations">
            <summary>
            	Task-completion sources representing pending wait operations.
            </summary>
        </member>
        <member name="F:Clix.Utilities.AsyncSemaphore.currentCount">
            <summary>
            	The semaphore's current count.
            </summary>
            <remarks>
            	Wait operations will block when the count is 0 (until it becomes non-zero).
            </remarks>
        </member>
        <member name="M:Clix.Utilities.AsyncSemaphore.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Clix.Utilities.AsyncSemaphore"/> class.
            </summary>
            <param name="initialCount">
            	The initial count for the semaphore.
            </param>
        </member>
        <member name="M:Clix.Utilities.AsyncSemaphore.WaitAsync">
            <summary>
            	Asynchronously wait for the semaphore's count to be non-zero.
            </summary>
            <returns>
            	A <see cref="T:System.Threading.Tasks.Task"/> representing the wait operation.
            </returns>
        </member>
        <member name="M:Clix.Utilities.AsyncSemaphore.Release">
            <summary>
            	Increment the semaphore's count.
            </summary>
        </member>
        <member name="T:Clix.Utilities.ConfigurationHelper">
            <summary>
                The configuration helper.
            </summary>
        </member>
        <member name="M:Clix.Utilities.ConfigurationHelper.GetAppSetting(System.String)">
            <summary>
            Gets the value for the specified app setting key.
            </summary>
            <param name="key">
            The app setting key.
            </param>
            <returns>
            The app setting value.
            </returns>
        </member>
        <member name="M:Clix.Utilities.ConfigurationHelper.GetWebConfiguration(System.String,System.String,System.String)">
            <summary>
            To get the application setting value from web configuration file.
            </summary>
            <param name="key">
            The key name of the application setting element.
            </param>
            <param name="virtualPath">
            The virtual path of the application to retrieve information from.
            </param>
            <param name="site">
            The site name where the application installed.
            </param>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:Clix.Utilities.ConfigurationHelper.SetAppSetting(System.String,System.String)">
            <summary>
            Sets the app setting.
            </summary>
            <param name="key">
            The key.
            </param>
            <param name="value">
            The value.
            </param>
        </member>
        <member name="M:Clix.Utilities.ConfigurationHelper.SetWebConfiguration(System.String,System.String,System.String,System.String)">
            <summary>
            Sets the web configuration appSettings section.
            </summary>
            <param name="key">
            The appSettings key.
            </param>
            <param name="value">
            The appSettings value to be set.
            </param>
            <param name="virtualPath">
            The virtual path of the web application.
            </param>
            <param name="site">
            Optional parameter. The site of the web application.
            </param>
        </member>
        <member name="M:Clix.Utilities.ConfigurationHelper.GetValue``1(System.Collections.Specialized.NameValueCollection,System.String,``0@)">
            <summary>
            Get app setting value from <paramref name="appSettings"/> based on the specified <paramref name="key"/>.
            </summary>
            <param name="appSettings">
            The app settings.
            </param>
            <param name="key">
            The key.
            </param>
            <param name="value">
            The value.
            </param>
            <typeparam name="T">
            The value type.
            </typeparam>
            <returns>
            Return true if successfully retrieves setting from the <paramref name="appSettings"/>. Otherwise false.
            </returns>
        </member>
        <member name="T:Clix.Utilities.IDataStore">
            <summary>
            The DataStore interface.
            </summary>
        </member>
        <member name="T:Clix.Utilities.LinqComparer">
            <summary>
            LINQ extensions with lambda comparers.
            </summary>
        </member>
        <member name="M:Clix.Utilities.LinqComparer.Contains``2(System.Collections.Generic.IEnumerable{``0},``0,System.Func{``0,``1})">
            <summary>
            Determines whether a sequence contains a specified element by using a specified <see cref="T:System.Collections.Generic.IEqualityComparer`1"/>.
            </summary>
            <returns>
            True if the source sequence contains an element that has the specified value; otherwise, false.
            </returns>
            <param name="source">
            A sequence in which to locate a value.
            </param>
            <param name="value">
            The value to locate in the sequence.
            </param>
            <param name="selectKey">
            The select Key.
            </param>
            <typeparam name="TSource">
            The type of the elements of <paramref name="source"/>.
            </typeparam>
            <typeparam name="TCompareKey">
            The type of the key returned by <paramref name="selectKey"/>.
            </typeparam>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> is null.
            </exception>
        </member>
        <member name="M:Clix.Utilities.LinqComparer.Create``1(System.Func{``0,``0,System.Int32})">
            <summary>
            Get an instance of <see cref="T:System.Collections.Generic.IComparer`1"/>.
            </summary>
            <typeparam name="T">
            The object type under comparison.
            </typeparam>
            <param name="compare">
            The compare.
            </param>
            <returns>
            The <see cref="T:System.Collections.Generic.IComparer`1"/>.
            </returns>
        </member>
        <member name="M:Clix.Utilities.LinqComparer.Create``2(System.Func{``0,``1})">
            <summary>
            Create an instance of <see cref="T:System.Collections.Generic.IEqualityComparer`1"/>.
            </summary>
            <typeparam name="TSource">
            The source type.
            </typeparam>
            <typeparam name="TKey">
            The key type.
            </typeparam>
            <param name="selectKey">
            The compare Key Selector.
            </param>
            <returns>
            The <see cref="T:System.Collections.Generic.IEqualityComparer`1"/>.
            </returns>
        </member>
        <member name="M:Clix.Utilities.LinqComparer.Create``1(System.Func{``0,``0,System.Boolean},System.Func{``0,System.Int32})">
            <summary>
            The create.
            </summary>
            <param name="equals">
            The equals.
            </param>
            <param name="getHashCode">
            The get hash code.
            </param>
            <typeparam name="T">
            The source type.
            </typeparam>
            <returns>
            The <see cref="T:System.Collections.Generic.IEqualityComparer`1"/>.
            </returns>
        </member>
        <member name="M:Clix.Utilities.LinqComparer.Distinct``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Returns distinct elements from a sequence by using a specified <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> to compare values.
            </summary>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> that contains distinct elements from the source sequence.
            </returns>
            <param name="source">
            The sequence to remove duplicate elements from.
            </param>
            <param name="selectKey">
            The select Key.
            </param>
            <typeparam name="TSource">
            The type of the elements of <paramref name="source"/>.
            </typeparam>
            <typeparam name="TCompareKey">
            The type of the key returned by <paramref name="selectKey"/>.
            </typeparam>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> is null.
            </exception>
        </member>
        <member name="M:Clix.Utilities.LinqComparer.Except``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Produces the set difference of two sequences by using the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> to compare values.
            </summary>
            <returns>
            A sequence that contains the set difference of the elements of two sequences.
            </returns>
            <param name="first">
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> whose elements that are not also in <paramref name="second"/> will be returned.
            </param>
            <param name="second">
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> whose elements that also occur in the first sequence will cause those elements to be removed from the returned sequence.
            </param>
            <param name="selectKey">
            The select Key.
            </param>
            <typeparam name="TSource">
            The type of the elements of the input sequences.
            </typeparam>
            <typeparam name="TCompareKey">
            The type of the key returned by <paramref name="selectKey"/>.
            </typeparam>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="first"/> or <paramref name="second"/> is null.
            </exception>
        </member>
        <member name="M:Clix.Utilities.LinqComparer.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Func{``1,``3})">
            <summary>
            Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key. The keys are compared by using a specified comparer.
            </summary>
            <returns>
            A collection of elements of type <typeparamref name="TResult"/> where each element represents a projection over a group and its key.
            </returns>
            <param name="source">
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> whose elements to group.
            </param>
            <param name="keySelector">
            A function to extract the key for each element.
            </param>
            <param name="resultSelector">
            A function to create a result value from each group.
            </param>
            <param name="selectKey">
            The select Key.
            </param>
            <typeparam name="TSource">
            The type of the elements of <paramref name="source"/>.
            </typeparam>
            <typeparam name="TKey">
            The type of the key returned by <paramref name="keySelector"/>.
            </typeparam>
            <typeparam name="TResult">
            The type of the result value returned by <paramref name="resultSelector"/>.
            </typeparam>
            <typeparam name="TCompareKey">
            The type of the key returned by <paramref name="selectKey"/>.
            </typeparam>
        </member>
        <member name="M:Clix.Utilities.LinqComparer.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,``3})">
            <summary>
            Groups the elements of a sequence according to a key selector function. The keys are compared by using a comparer and each group's elements are projected by using a specified function.
            </summary>
            <returns>
            An IEnumerable&lt;IGrouping&lt;TKey, TElement&gt;&gt; in C# or IEnumerable(Of IGrouping(Of TKey, TElement)) in Visual Basic where each <see cref="T:System.Linq.IGrouping`2"/> object contains a collection of objects of type <typeparamref name="TElement"/> and a key.
            </returns>
            <param name="source">
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> whose elements to group.
            </param>
            <param name="keySelector">
            A function to extract the key for each element.
            </param>
            <param name="elementSelector">
            A function to map each source element to an element in an <see cref="T:System.Linq.IGrouping`2"/>.
            </param>
            <param name="selectKey">
            The select Key.
            </param>
            <typeparam name="TSource">
            The type of the elements of <paramref name="source"/>.
            </typeparam>
            <typeparam name="TKey">
            The type of the key returned by <paramref name="keySelector"/>.
            </typeparam>
            <typeparam name="TElement">
            The type of the elements in the <see cref="T:System.Linq.IGrouping`2"/>.
            </typeparam>
            <typeparam name="TCompareKey">
            The type of comparer returned by <paramref name="selectKey"/>.
            </typeparam>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> or <paramref name="keySelector"/> or <paramref name="elementSelector"/> is null.
            </exception>
        </member>
        <member name="M:Clix.Utilities.LinqComparer.GroupBy``5(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Func{``1,``4})">
            <summary>
            Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key. Key values are compared by using a specified comparer, and the elements of each group are projected by using a specified function.
            </summary>
            <returns>
            A collection of elements of type <typeparamref name="TResult"/> name="TResult"/&gt; where each element represents a projection over a group and its key.
            </returns>
            <param name="source">
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> whose elements to group.
            </param>
            <param name="keySelector">
            A function to extract the key for each element.
            </param>
            <param name="elementSelector">
            A function to map each source element to an element in an <see cref="T:System.Linq.IGrouping`2"/>.
            </param>
            <param name="resultSelector">
            A function to create a result value from each group.
            </param>
            <param name="selectKey">
            The select Key.
            </param>
            <typeparam name="TSource">
            The type of the elements of <paramref name="source"/>.
            </typeparam>
            <typeparam name="TKey">
            The type of the key returned by <paramref name="keySelector"/>.
            </typeparam>
            <typeparam name="TElement">
            The type of the elements in each <see cref="T:System.Linq.IGrouping`2"/>.
            </typeparam>
            <typeparam name="TResult">
            The type of the result value returned by <paramref name="resultSelector"/>.
            </typeparam>
            <typeparam name="TCompareKey">
            The type of comparer returned by <paramref name="selectKey"/>.
            </typeparam>
        </member>
        <member name="M:Clix.Utilities.LinqComparer.GroupJoin``5(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Func{``2,``4})">
            <summary>
            Correlates the elements of two sequences based on key equality and groups the results. A specified <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> is used to compare keys.
            </summary>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> that contains elements of type <typeparamref name="TResult"/> that are obtained by performing a grouped join on two sequences.
            </returns>
            <param name="outer">
            The first sequence to join.
            </param>
            <param name="inner">
            The sequence to join to the first sequence.
            </param>
            <param name="outerKeySelector">
            A function to extract the join key from each element of the first sequence.
            </param>
            <param name="innerKeySelector">
            A function to extract the join key from each element of the second sequence.
            </param>
            <param name="resultSelector">
            A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.
            </param>
            <param name="selectKey">
            The select Key.
            </param>
            <typeparam name="TOuter">
            The type of the elements of the first sequence.
            </typeparam>
            <typeparam name="TInner">
            The type of the elements of the second sequence.
            </typeparam>
            <typeparam name="TKey">
            The type of the keys returned by the key selector functions.
            </typeparam>
            <typeparam name="TResult">
            The type of the result elements.
            </typeparam>
            <typeparam name="TCompareKey">
            The type of comparer returned by <paramref name="selectKey"/>.
            </typeparam>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="outer"/> or <paramref name="inner"/> or <paramref name="outerKeySelector"/> or <paramref name="innerKeySelector"/> or <paramref name="resultSelector"/> is null.
            </exception>
        </member>
        <member name="M:Clix.Utilities.LinqComparer.Intersect``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Produces the set intersection of two sequences by using the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> to compare values.
            </summary>
            <returns>
            A sequence that contains the elements that form the set intersection of two sequences.
            </returns>
            <param name="first">
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> whose distinct elements that also appear in <paramref name="second"/> will be returned.
            </param>
            <param name="second">
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> whose distinct elements that also appear in the first sequence will be returned.
            </param>
            <param name="selectKey">
            The select Key.
            </param>
            <typeparam name="TSource">
            The type of the elements of the input sequences.
            </typeparam>
            <typeparam name="TCompareKey">
            The type of comparer returned by <paramref name="selectKey"/>.
            </typeparam>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="first"/> or <paramref name="second"/> is null.
            </exception>
        </member>
        <member name="M:Clix.Utilities.LinqComparer.Join``5(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Func{``2,``4})">
            <summary>
            Correlates the elements of two sequences based on matching keys. A specified <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> is used to compare keys.
            </summary>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> that has elements of type <typeparamref name="TResult"/> that are obtained by performing an inner join on two sequences.
            </returns>
            <param name="outer">
            The first sequence to join.
            </param>
            <param name="inner">
            The sequence to join to the first sequence.
            </param>
            <param name="outerKeySelector">
            A function to extract the join key from each element of the first sequence.
            </param>
            <param name="innerKeySelector">
            A function to extract the join key from each element of the second sequence.
            </param>
            <param name="resultSelector">
            A function to create a result element from two matching elements.
            </param>
            <param name="selectKey">
            The select Key.
            </param>
            <typeparam name="TOuter">
            The type of the elements of the first sequence.
            </typeparam>
            <typeparam name="TInner">
            The type of the elements of the second sequence.
            </typeparam>
            <typeparam name="TKey">
            The type of the keys returned by the key selector functions.
            </typeparam>
            <typeparam name="TResult">
            The type of the result elements.
            </typeparam>
            <typeparam name="TCompareKey">
            The type of comparer returned by <paramref name="selectKey"/>.
            </typeparam>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="outer"/> or <paramref name="inner"/> or <paramref name="outerKeySelector"/> or <paramref name="innerKeySelector"/> or <paramref name="resultSelector"/> is null.
            </exception>
        </member>
        <member name="M:Clix.Utilities.LinqComparer.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,``1,System.Int32})">
            <summary>
            Sorts the elements of a sequence in ascending order by using a specified comparer.
            </summary>
            <param name="source">
            A sequence of values.
            </param>
            <param name="keySelector">
            A function to extract a key from an element.
            </param>
            <param name="compare">
            A function to create a Comparer.
            </param>
            <typeparam name="TSource">
            The type of the elements of <paramref name="source"/>
            </typeparam>
            <typeparam name="TKey">
            The type of the key returned by <paramref name="keySelector"/>.
            </typeparam>
            <returns>
            An <see cref="T:System.Linq.IOrderedEnumerable`1"/> whose elements are sorted according to a key.
            </returns>
        </member>
        <member name="M:Clix.Utilities.LinqComparer.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,``1,System.Int32})">
            <summary>
            Sorts the elements of a sequence in descending order by using a specified comparer.
            </summary>
            <param name="source">
            A sequence of values.
            </param>
            <param name="keySelector">
            A function to extract a key from an element.
            </param>
            <param name="compare">
            A function to create a Comparer.
            </param>
            <typeparam name="TSource">
            The type of the elements of <paramref name="source"/>
            </typeparam>
            <typeparam name="TKey">
            The type of the key returned by <paramref name="keySelector"/>.
            </typeparam>
            <returns>
            An <see cref="T:System.Linq.IOrderedEnumerable`1"/> whose elements are sorted according to a key.
            </returns>
        </member>
        <member name="M:Clix.Utilities.LinqComparer.SequenceEqual``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Determines whether two sequences are equal by comparing their elements by using a specified <see cref="T:System.Collections.Generic.IEqualityComparer`1"/>.
            </summary>
            <returns>
            True if the two source sequences are of equal length and their corresponding elements compare equal according to <paramtyperef name="TCompareKey"/>; otherwise, false.
            </returns>
            <param name="first">
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to compare to <paramref name="second"/>.
            </param>
            <param name="second">
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to compare to the first sequence.
            </param>
            <param name="selectKey">
            The select Key.
            </param>
            <typeparam name="TSource">
            The type of the elements of the input sequences.
            </typeparam>
            <typeparam name="TCompareKey">
            The type of comparer returned by <paramref name="selectKey"/>.
            </typeparam>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="first"/> or <paramref name="second"/> is null.
            </exception>
        </member>
        <member name="M:Clix.Utilities.LinqComparer.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Func{``1,``1,System.Int32})">
            <summary>
            Performs a subsequent ordering of the elements in a sequence in ascending order by using a specified comparer.
            </summary>
            <returns>
            An <see cref="T:System.Linq.IOrderedEnumerable`1"/> whose elements are sorted according to a key.
            </returns>
            <param name="source">
            An <see cref="T:System.Linq.IOrderedEnumerable`1"/> that contains elements to sort.
            </param>
            <param name="keySelector">
            A function to extract a key from each element.
            </param>
            <param name="compare">
            The compare.
            </param>
            <typeparam name="TSource">
            The type of the elements of <paramref name="source"/>.
            </typeparam>
            <typeparam name="TKey">
            The type of the key returned by <paramref name="keySelector"/>.
            </typeparam>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> or <paramref name="keySelector"/> is null.
            </exception>
        </member>
        <member name="M:Clix.Utilities.LinqComparer.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Func{``1,``1,System.Int32})">
            <summary>
            Performs a subsequent ordering of the elements in a sequence in descending order by using a specified comparer.
            </summary>
            <returns>
            An <see cref="T:System.Linq.IOrderedEnumerable`1"/> whose elements are sorted in descending order according to a key.
            </returns>
            <param name="source">
            An <see cref="T:System.Linq.IOrderedEnumerable`1"/> that contains elements to sort.
            </param>
            <param name="keySelector">
            A function to extract a key from each element.
            </param>
            <param name="compare">
            The compare.
            </param>
            <typeparam name="TSource">
            The type of the elements of <paramref name="source"/>.
            </typeparam>
            <typeparam name="TKey">
            The type of the key returned by <paramref name="keySelector"/>.
            </typeparam>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> or <paramref name="keySelector"/> is null.
            </exception>
        </member>
        <member name="M:Clix.Utilities.LinqComparer.ToDictionary``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,``3})">
            <summary>
            Creates a <see cref="T:System.Collections.Generic.Dictionary`2"/> from an <see cref="T:System.Collections.Generic.IEnumerable`1"/> according to a specified key selector function, a comparer, and an element selector function.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.Dictionary`2"/> that contains values of type <typeparamref name="TElement"/> selected from the input sequence.
            </returns>
            <param name="source">
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to create a <see cref="T:System.Collections.Generic.Dictionary`2"/> from.
            </param>
            <param name="keySelector">
            A function to extract a key from each element.
            </param>
            <param name="elementSelector">
            A transform function to produce a result element value from each element.
            </param>
            <param name="selectKey">
            The select Key.
            </param>
            <typeparam name="TSource">
            The type of the elements of <paramref name="source"/>.
            </typeparam>
            <typeparam name="TKey">
            The type of the key returned by <paramref name="keySelector"/>.
            </typeparam>
            <typeparam name="TElement">
            The type of the value returned by <paramref name="elementSelector"/>.
            </typeparam>
            <typeparam name="TCompareKey">
            The type of comparer returned by <paramref name="selectKey"/>.
            </typeparam>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> or <paramref name="keySelector"/> or <paramref name="elementSelector"/> is null.-or-<paramref name="keySelector"/> produces a key that is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="keySelector"/> produces duplicate keys for two elements.
            </exception>
        </member>
        <member name="M:Clix.Utilities.LinqComparer.ToLookup``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,``3})">
            <summary>
            Creates a <see cref="T:System.Linq.Lookup`2"/> from an <see cref="T:System.Collections.Generic.IEnumerable`1"/> according to a specified key selector function, a comparer and an element selector function.
            </summary>
            <returns>
            A <see cref="T:System.Linq.Lookup`2"/> that contains values of type <typeparamref name="TElement"/> selected from the input sequence.
            </returns>
            <param name="source">
            The <see cref="T:System.Collections.Generic.IEnumerable`1"/> to create a <see cref="T:System.Linq.Lookup`2"/> from.
            </param>
            <param name="keySelector">
            A function to extract a key from each element.
            </param>
            <param name="elementSelector">
            A transform function to produce a result element value from each element.
            </param>
            <param name="selectKey">
            The select Key.
            </param>
            <typeparam name="TSource">
            The type of the elements of <paramref name="source"/>.
            </typeparam>
            <typeparam name="TKey">
            The type of the key returned by <paramref name="keySelector"/>.
            </typeparam>
            <typeparam name="TElement">
            The type of the value returned by <paramref name="elementSelector"/>.
            </typeparam>
            <typeparam name="TCompareKey">
            The type of comparer returned by <paramref name="selectKey"/>.
            </typeparam>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> or <paramref name="keySelector"/> or <paramref name="elementSelector"/> is null.
            </exception>
        </member>
        <member name="M:Clix.Utilities.LinqComparer.Union``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Produces the set union of two sequences by using a specified <see cref="T:System.Collections.Generic.IEqualityComparer`1"/>.
            </summary>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> that contains the elements from both input sequences, excluding duplicates.
            </returns>
            <param name="first">
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> whose distinct elements form the first set for the union.
            </param>
            <param name="second">
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> whose distinct elements form the second set for the union.
            </param>
            <param name="selectKey">
            The select Key.
            </param>
            <typeparam name="TSource">
            The type of the elements of the input sequences.
            </typeparam>
            <typeparam name="TCompareKey">
            The type of comparer returned by <paramref name="selectKey"/>.
            </typeparam>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="first"/> or <paramref name="second"/> is null.
            </exception>
        </member>
        <member name="T:Clix.Utilities.LinqComparer.KeyComparer`1">
            <summary>
            The comparer.
            </summary>
            <typeparam name="T">
            The source object type.
            </typeparam>
        </member>
        <member name="F:Clix.Utilities.LinqComparer.KeyComparer`1.compare">
            <summary>
            The compare.
            </summary>
        </member>
        <member name="M:Clix.Utilities.LinqComparer.KeyComparer`1.#ctor(System.Func{`0,`0,System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Clix.Utilities.LinqComparer.KeyComparer`1"/> class.
            </summary>
            <param name="compare">
            The compare.
            </param>
        </member>
        <member name="M:Clix.Utilities.LinqComparer.KeyComparer`1.Compare(`0,`0)">
            <summary>
            The compare.
            </summary>
            <param name="x">
            The x.
            </param>
            <param name="y">
            The y.
            </param>
            <returns>
            The <see cref="T:System.Int32"/>.
            </returns>
        </member>
        <member name="T:Clix.Utilities.LinqComparer.KeyEqualityComparer`1">
            <summary>
            The equality comparer.
            </summary>
            <typeparam name="T">
            The object type.
            </typeparam>
        </member>
        <member name="F:Clix.Utilities.LinqComparer.KeyEqualityComparer`1.equals">
            <summary>
            The equals.
            </summary>
        </member>
        <member name="F:Clix.Utilities.LinqComparer.KeyEqualityComparer`1.getHashCode">
            <summary>
            The get hash code.
            </summary>
        </member>
        <member name="M:Clix.Utilities.LinqComparer.KeyEqualityComparer`1.#ctor(System.Func{`0,`0,System.Boolean},System.Func{`0,System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Clix.Utilities.LinqComparer.KeyEqualityComparer`1"/> class.
            </summary>
            <param name="equals">
            The equals.
            </param>
            <param name="getHashCode">
            The get hash code.
            </param>
        </member>
        <member name="M:Clix.Utilities.LinqComparer.KeyEqualityComparer`1.Equals(`0,`0)">
            <summary>
            The equals.
            </summary>
            <param name="x">
            The x.
            </param>
            <param name="y">
            The y.
            </param>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Clix.Utilities.LinqComparer.KeyEqualityComparer`1.GetHashCode(`0)">
            <summary>
            The get hash code.
            </summary>
            <param name="obj">
            The object.
            </param>
            <returns>
            The <see cref="T:System.Int32"/>.
            </returns>
        </member>
        <member name="T:Clix.Utilities.SettingsHelper">
            <summary>
            The settings helper.
            </summary>
        </member>
        <member name="M:Clix.Utilities.SettingsHelper.GetConfigOptionValue``1(System.String,``0,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Gets the configuration option value.
            </summary>
            <param name="key">
            The key name.
            </param>
            <param name="defaultValue">
            The default value.
            </param>
            <param name="appSettings">
            The app settings.
            </param>
            <typeparam name="T">
            The value type.
            </typeparam>
            <returns>
            The value of type <typeparamref name="T"/> from configuration file.
            </returns>
        </member>
        <member name="M:Clix.Utilities.SettingsHelper.GetConfigOptionValueDouble(System.String,System.Double,System.Collections.Specialized.NameValueCollection)">
            <summary>
            TGets the configuration option value as double.
            </summary>
            <param name="optionName">
            The option name.
            </param>
            <param name="defaultValue">
            The default value.
            </param>
            <param name="appSettings">
            The app settings.
            </param>
            <returns>
            The <see cref="T:System.Double"/>.
            </returns>
        </member>
        <member name="M:Clix.Utilities.SettingsHelper.GetConfigOptionValueInt(System.String,System.Int32,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Gets the configuration option value as integer.
            </summary>
            <param name="key">
            The key.
            </param>
            <param name="defaultValue">
            The default value.
            </param>
            <param name="appSettings">
            The app settings.
            </param>
            <returns>
            The <see cref="T:System.Int32"/>.
            </returns>
        </member>
        <member name="T:Clix.Utilities.StoreManagerBase`1">
            <summary>
                The xml store manager base.
            </summary>
            <typeparam name="TDataStore">
                The data store type.
            </typeparam>
        </member>
        <member name="F:Clix.Utilities.StoreManagerBase`1.storeLock">
            <summary>
                A simple asynchronous lock used to synchronise access to the XML data store.
            </summary>
        </member>
        <member name="F:Clix.Utilities.StoreManagerBase`1.storeXmlFile">
            <summary>
                The full path to the file that holds the XML-serialised EMaaS store data.
            </summary>
        </member>
        <member name="M:Clix.Utilities.StoreManagerBase`1.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Clix.Utilities.StoreManagerBase`1" /> class.
            </summary>
            <param name="storeXmlFile">
                The store xml file.
            </param>
        </member>
        <member name="P:Clix.Utilities.StoreManagerBase`1.StoreXmlFile">
            <summary>
                Gets the full path to the file that holds hold XML-serialised DMS store data.
            </summary>
        </member>
        <member name="P:Clix.Utilities.StoreManagerBase`1.StoreFileExists">
            <summary>
                Gets a value indicating whether does the XML-serialised store data file exist?
            </summary>
        </member>
        <member name="M:Clix.Utilities.StoreManagerBase`1.SaveAsync(`0,System.Threading.CancellationToken)">
            <summary>
                Asynchronously save the store contents as XML to the specified file.
            </summary>
            <param name="dataStore">
                The data store to save.
            </param>
            <param name="cancellationToken">
                An optional cancellation token that can be used to cancel the asynchronous operation.
            </param>
            <returns>
                A <see cref="T:System.Threading.Tasks.Task" /> representing the asynchronous operation.
            </returns>
        </member>
        <member name="M:Clix.Utilities.StoreManagerBase`1.LoadAsync(System.Threading.CancellationToken)">
            <summary>
                Asynchronously load store data from the store XML file.
            </summary>
            <param name="cancellationToken">
                An optional cancellation token that can be used to cancel the asynchronous operation.
            </param>
            <returns>
                A <see cref="T:System.Threading.Tasks.Task" /> representing the asynchronous operation.
            </returns>
        </member>
        <member name="T:Clix.Utilities.StringHelper">
            <summary>
            The string helper.
            </summary>
        </member>
        <member name="P:Clix.Utilities.StringHelper.Punctuations">
            <summary>
            Gets the punctuations char collection.
            </summary>
        </member>
        <member name="P:Clix.Utilities.StringHelper.Digits">
            <summary>
            Gets the digits char collection.
            </summary>
        </member>
        <member name="P:Clix.Utilities.StringHelper.LowerLetters">
            <summary>
            Gets the lower case letters char collection.
            </summary>
        </member>
        <member name="P:Clix.Utilities.StringHelper.UpperLetters">
            <summary>
            Gets the upper case letters char collection.
            </summary>
        </member>
        <member name="M:Clix.Utilities.StringHelper.Random(System.String,System.Int32,System.Boolean)">
            <summary>
            To randomize the provided string by appending a random <see cref="T:System.Guid"/>.
            </summary>
            <param name="value">
            The original value.
            </param>
            <param name="length">
            The length of the random string to be attached.
            </param>
            <param name="appending">
            The flag that indicating whether to append or prefix the random string.
            </param>
            <returns>
            The randomized <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:Clix.Utilities.StringHelper.Random(System.Int32)">
            <summary>
            Create a random string by trimming a new Guid.
            </summary>
            <param name="length">
            The length of the output result.
            </param>
            <returns>
            The <see cref="T:System.String"/>. Which cannot be longer than a Guid.
            </returns>
        </member>
        <member name="M:Clix.Utilities.StringHelper.RandomFromSeed(System.String,System.Int32)">
            <summary>
            Create a random string from seed.
            </summary>
            <param name="seed">
            The seed.
            </param>
            <param name="length">
            The string length.
            </param>
            <returns>
            The <see cref="T:System.String"/> with the specified length, contains only the characters provided by <paramref name="seed"/>.
            </returns>
            <remarks>
            Use this only if you have to select a set of characters, otherwise use the Random(int length = 8) method.
            Which utilizes the Guid generation algorithm, and has higher resolution up to 100 nanosecond.
            </remarks>
        </member>
    </members>
</doc>
